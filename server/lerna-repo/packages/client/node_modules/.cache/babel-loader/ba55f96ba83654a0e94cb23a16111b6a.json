{"ast":null,"code":"import _classCallCheck from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"d:\\\\test_lerna\\\\packages\\\\client\\\\src\\\\containers\\\\Dash\\\\Dash.jsx\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'; // this is used to create scrollbars on windows devices like the ones from apple devices\n\nimport * as Ps from 'perfect-scrollbar';\nimport 'perfect-scrollbar/dist/css/perfect-scrollbar.min.css'; // react component that creates notifications (like some alerts with messages)\n\nimport NotificationSystem from 'react-notification-system';\nimport Sidebar from 'components/Sidebar/Sidebar.jsx';\nimport Header from 'components/Header/Header.jsx'; // dinamically create dashboard routes\n\nimport dashRoutes from 'routes/dash.jsx'; // style for notifications\n\nimport { style } from \"variables/Variables.jsx\";\n\nvar Dash =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dash, _Component);\n\n  function Dash(props) {\n    var _this;\n\n    _classCallCheck(this, Dash);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dash).call(this, props));\n    _this.handleNotificationClick = _this.handleNotificationClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      _notificationSystem: null\n    };\n    return _this;\n  }\n\n  _createClass(Dash, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        _notificationSystem: this.refs.notificationSystem\n      });\n\n      if (window.matchMedia(\"(min-width: 960px)\").matches && !this.isMac()) {\n        Ps.initialize(this.refs.mainPanel, {\n          wheelSpeed: 2,\n          suppressScrollX: true\n        });\n      }\n    } // function that shows/hides notifications - it was put here, because the wrapper div has to be outside the main-panel class div\n\n  }, {\n    key: \"handleNotificationClick\",\n    value: function handleNotificationClick(position) {\n      var color = Math.floor(Math.random() * 4 + 1);\n      var level;\n\n      switch (color) {\n        case 1:\n          level = 'success';\n          break;\n\n        case 2:\n          level = 'warning';\n          break;\n\n        case 3:\n          level = 'error';\n          break;\n\n        case 4:\n          level = 'info';\n          break;\n\n        default:\n          break;\n      }\n\n      this.state._notificationSystem.addNotification({\n        title: React.createElement(\"span\", {\n          \"data-notify\": \"icon\",\n          className: \"pe-7s-gift\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }),\n        message: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Welcome to \", React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, \"Light Bootstrap Dashboard\"), \" - a beautiful freebie for every web developer.\"),\n        level: level,\n        position: position,\n        autoDismiss: 15\n      });\n    } // function that creates perfect scroll bar for windows users (it creates a scrollbar that looks like the one from apple devices)\n\n  }, {\n    key: \"isMac\",\n    value: function isMac() {\n      var bool = false;\n\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\n        bool = true;\n      }\n\n      return bool;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      var _this2 = this;\n\n      if (window.matchMedia(\"(min-width: 960px)\").matches && !this.isMac()) {\n        setTimeout(function () {\n          Ps.update(_this2.refs.mainPanel);\n        }, 350);\n      }\n\n      if (e.history.action === \"PUSH\") {\n        this.refs.mainPanel.scrollTop = 0;\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (document.documentElement.className.indexOf('nav-open') !== -1) {\n        document.documentElement.classList.toggle('nav-open');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(NotificationSystem, {\n        ref: \"notificationSystem\",\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Sidebar, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\" + (this.props.location.pathname === \"/maps/full-screen-maps\" ? \" main-panel-maps\" : \"\"),\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, dashRoutes.map(function (prop, key) {\n        if (prop.collapse) {\n          return prop.views.map(function (prop, key) {\n            if (prop.name === \"Notifications\") {\n              return React.createElement(Route, {\n                path: prop.path,\n                key: key,\n                render: function render(routeProps) {\n                  return React.createElement(prop.component, Object.assign({}, routeProps, {\n                    handleClick: _this3.handleNotificationClick,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 107\n                    },\n                    __self: this\n                  }));\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103\n                },\n                __self: this\n              });\n            } else {\n              return React.createElement(Route, {\n                path: prop.path,\n                component: prop.component,\n                key: key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115\n                },\n                __self: this\n              });\n            }\n          });\n        } else {\n          if (prop.redirect) return React.createElement(Redirect, {\n            from: prop.path,\n            to: prop.pathTo,\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          });else return React.createElement(Route, {\n            path: prop.path,\n            component: prop.component,\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          });\n        }\n      }))));\n    }\n  }]);\n\n  return Dash;\n}(Component);\n\nexport default Dash;","map":{"version":3,"sources":["d:\\test_lerna\\packages\\client\\src\\containers\\Dash\\Dash.jsx"],"names":["React","Component","Switch","Route","Redirect","Ps","NotificationSystem","Sidebar","Header","dashRoutes","style","Dash","props","handleNotificationClick","bind","state","_notificationSystem","setState","refs","notificationSystem","window","matchMedia","matches","isMac","initialize","mainPanel","wheelSpeed","suppressScrollX","position","color","Math","floor","random","level","addNotification","title","message","autoDismiss","bool","navigator","platform","toUpperCase","indexOf","e","setTimeout","update","history","action","scrollTop","document","documentElement","className","classList","toggle","location","pathname","map","prop","key","collapse","views","name","path","routeProps","component","redirect","pathTo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n} from 'react-router-dom';\r\n// this is used to create scrollbars on windows devices like the ones from apple devices\r\nimport * as Ps from 'perfect-scrollbar';\r\nimport 'perfect-scrollbar/dist/css/perfect-scrollbar.min.css';\r\n// react component that creates notifications (like some alerts with messages)\r\nimport NotificationSystem from 'react-notification-system';\r\n\r\nimport Sidebar from 'components/Sidebar/Sidebar.jsx';\r\nimport Header from 'components/Header/Header.jsx';\r\n\r\n// dinamically create dashboard routes\r\nimport dashRoutes from 'routes/dash.jsx';\r\n\r\n// style for notifications\r\nimport { style } from \"variables/Variables.jsx\";\r\n\r\nclass Dash extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleNotificationClick = this.handleNotificationClick.bind(this);\r\n        this.state = {\r\n            _notificationSystem: null\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.setState({_notificationSystem: this.refs.notificationSystem});\r\n        if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n            Ps.initialize(this.refs.mainPanel, { wheelSpeed: 2, suppressScrollX: true });\r\n        }\r\n    }\r\n    // function that shows/hides notifications - it was put here, because the wrapper div has to be outside the main-panel class div\r\n    handleNotificationClick(position){\r\n        var color = Math.floor((Math.random() * 4) + 1);\r\n        var level;\r\n        switch (color) {\r\n            case 1:\r\n                level = 'success';\r\n                break;\r\n            case 2:\r\n                level = 'warning';\r\n                break;\r\n            case 3:\r\n                level = 'error';\r\n                break;\r\n            case 4:\r\n                level = 'info';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.state._notificationSystem.addNotification({\r\n            title: (<span data-notify=\"icon\" className=\"pe-7s-gift\"></span>),\r\n            message: (\r\n                <div>\r\n                    Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for every web developer.\r\n                </div>\r\n            ),\r\n            level: level,\r\n            position: position,\r\n            autoDismiss: 15,\r\n        });\r\n    }\r\n    // function that creates perfect scroll bar for windows users (it creates a scrollbar that looks like the one from apple devices)\r\n    isMac(){\r\n        let bool = false;\r\n        if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\r\n            bool = true;\r\n        }\r\n        return bool;\r\n    }\r\n    componentDidUpdate(e){\r\n        if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\r\n            setTimeout(() => { Ps.update(this.refs.mainPanel) }, 350);\r\n        }\r\n        if(e.history.action === \"PUSH\"){\r\n            this.refs.mainPanel.scrollTop = 0;\r\n        }\r\n    }\r\n    componentWillMount(){\r\n        if(document.documentElement.className.indexOf('nav-open') !== -1){\r\n            document.documentElement.classList.toggle('nav-open');\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <NotificationSystem ref=\"notificationSystem\" style={style}/>\r\n                <Sidebar {...this.props} />\r\n                <div className={\"main-panel\"+(this.props.location.pathname === \"/maps/full-screen-maps\" ? \" main-panel-maps\":\"\")} ref=\"mainPanel\">\r\n                    <Header {...this.props}/>\r\n                        <Switch>\r\n                            {\r\n                                dashRoutes.map((prop,key) => {\r\n                                    if(prop.collapse){\r\n                                        return prop.views.map((prop,key) => {\r\n                                            if(prop.name === \"Notifications\"){\r\n                                                return (\r\n                                                    <Route\r\n                                                        path={prop.path}\r\n                                                        key={key}\r\n                                                        render={routeProps =>\r\n                                                           <prop.component\r\n                                                               {...routeProps}\r\n                                                               handleClick={this.handleNotificationClick}\r\n                                                           />}\r\n                                                    />\r\n                                                );\r\n                                            } else {\r\n                                                return (\r\n                                                    <Route path={prop.path} component={prop.component} key={key}/>\r\n                                                );\r\n                                            }\r\n                                        })\r\n                                    } else {\r\n                                        if(prop.redirect)\r\n                                            return (\r\n                                                <Redirect from={prop.path} to={prop.pathTo} key={key}/>\r\n                                            );\r\n                                        else\r\n                                            return (\r\n                                                <Route path={prop.path} component={prop.component} key={key}/>\r\n                                            );\r\n                                    }\r\n                                })\r\n                            }\r\n                        </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dash;\r\n"]},"metadata":{},"sourceType":"module"}