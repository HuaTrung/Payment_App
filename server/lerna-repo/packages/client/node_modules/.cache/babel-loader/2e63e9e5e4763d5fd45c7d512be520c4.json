{"ast":null,"code":"import _classCallCheck from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\test_lerna\\\\packages\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\test_lerna\\\\packages\\\\client\\\\src\\\\containers\\\\Pages\\\\Pages.jsx\";\nimport React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport PagesHeader from 'components/Header/PagesHeader.jsx'; // dinamically create pages routes\n\nimport pagesRoutes from 'routes/pages.jsx';\nimport bgImage from 'assets/img/full-screen-image-3.jpg';\n\nvar Pages =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pages, _Component);\n\n  function Pages() {\n    _classCallCheck(this, Pages);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Pages).apply(this, arguments));\n  }\n\n  _createClass(Pages, [{\n    key: \"getPageClass\",\n    value: function getPageClass() {\n      var pageClass = \"\";\n\n      switch (this.props.location.pathname) {\n        case \"/pages/login-page\":\n          pageClass = \" login-page\";\n          break;\n\n        case \"/pages/register-page\":\n          pageClass = \" register-page\";\n          break;\n\n        case \"/pages/lock-screen-page\":\n          pageClass = \" lock-page\";\n          break;\n\n        default:\n          pageClass = \"\";\n          break;\n      }\n\n      return pageClass;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (document.documentElement.className.indexOf('nav-open') !== -1) {\n        document.documentElement.classList.toggle('nav-open');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(PagesHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"wrapper wrapper-full-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"full-page\" + this.getPageClass(),\n        \"data-color\": \"black\",\n        \"data-image\": bgImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, pagesRoutes.map(function (prop, key) {\n        return React.createElement(Route, {\n          path: prop.path,\n          component: prop.component,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        });\n      }))), React.createElement(\"div\", {\n        className: \"full-page-background\",\n        style: {\n          backgroundImage: \"url(\" + bgImage + \")\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Pages;\n}(Component);\n\nexport default Pages;","map":{"version":3,"sources":["d:\\test_lerna\\packages\\client\\src\\containers\\Pages\\Pages.jsx"],"names":["React","Component","Switch","Route","PagesHeader","pagesRoutes","bgImage","Pages","pageClass","props","location","pathname","document","documentElement","className","indexOf","classList","toggle","getPageClass","map","prop","key","path","component","backgroundImage"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACIC,MADJ,EAEIC,KAFJ,QAGO,kBAHP;AAKA,OAAOC,WAAP,MAAwB,mCAAxB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,OAAOC,OAAP,MAAoB,oCAApB;;IAEMC,K;;;;;;;;;;;;;mCACY;AACV,UAAIC,SAAS,GAAG,EAAhB;;AACA,cAAQ,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAA5B;AACI,aAAK,mBAAL;AACIH,UAAAA,SAAS,GAAG,aAAZ;AACA;;AACJ,aAAK,sBAAL;AACIA,UAAAA,SAAS,GAAG,gBAAZ;AACA;;AACJ,aAAK,yBAAL;AACIA,UAAAA,SAAS,GAAG,YAAZ;AACA;;AACJ;AACIA,UAAAA,SAAS,GAAG,EAAZ;AACA;AAZR;;AAcA,aAAOA,SAAP;AACH;;;yCACmB;AAChB,UAAGI,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,OAAnC,CAA2C,UAA3C,MAA2D,CAAC,CAA/D,EAAiE;AAC7DH,QAAAA,QAAQ,CAACC,eAAT,CAAyBG,SAAzB,CAAmCC,MAAnC,CAA0C,UAA1C;AACH;AACJ;;;6BACO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAE,cAAY,KAAKC,YAAL,EAA5B;AAAiD,sBAAW,OAA5D;AAAoE,sBAAYZ,OAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQD,WAAW,CAACc,GAAZ,CAAgB,UAACC,IAAD,EAAMC,GAAN,EAAc;AAC1B,eACI,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAED,IAAI,CAACE,IAAlB;AAAwB,UAAA,SAAS,EAAEF,IAAI,CAACG,SAAxC;AAAoD,UAAA,GAAG,EAAEF,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJD,CAFR,CADJ,CADJ,EAYI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,KAAK,EAAE;AAACG,UAAAA,eAAe,EAAE,SAAOlB,OAAP,GAAe;AAAjC,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ,CAFJ,CADJ;AAqBH;;;;EA9CeL,S;;AAiDpB,eAAeM,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\n\r\nimport PagesHeader from 'components/Header/PagesHeader.jsx';\r\n\r\n// dinamically create pages routes\r\nimport pagesRoutes from 'routes/pages.jsx';\r\n\r\nimport bgImage from 'assets/img/full-screen-image-3.jpg';\r\n\r\nclass Pages extends Component{\r\n    getPageClass(){\r\n        var pageClass = \"\";\r\n        switch (this.props.location.pathname) {\r\n            case \"/pages/login-page\":\r\n                pageClass = \" login-page\";\r\n                break;\r\n            case \"/pages/register-page\":\r\n                pageClass = \" register-page\";\r\n                break;\r\n            case \"/pages/lock-screen-page\":\r\n                pageClass = \" lock-page\";\r\n                break;\r\n            default:\r\n                pageClass = \"\";\r\n                break;\r\n        }\r\n        return pageClass;\r\n    }\r\n    componentWillMount(){\r\n        if(document.documentElement.className.indexOf('nav-open') !== -1){\r\n            document.documentElement.classList.toggle('nav-open');\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <PagesHeader />\r\n                <div className=\"wrapper wrapper-full-page\">\r\n                    <div className={\"full-page\"+this.getPageClass()} data-color=\"black\" data-image={bgImage}>\r\n                        <div className=\"content\">\r\n                            <Switch>\r\n                                {\r\n                                    pagesRoutes.map((prop,key) => {\r\n                                        return (\r\n                                            <Route path={prop.path} component={prop.component}  key={key}/>\r\n                                        );\r\n                                    })\r\n                                }\r\n                            </Switch>\r\n                        </div>\r\n                        <div className=\"full-page-background\" style={{backgroundImage: \"url(\"+bgImage+\")\"}}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pages;\r\n"]},"metadata":{},"sourceType":"module"}